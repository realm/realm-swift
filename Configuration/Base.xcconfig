ALWAYS_SEARCH_USER_PATHS = NO;
CLANG_CXX_LANGUAGE_STANDARD = c++20;
CLANG_CXX_LIBRARY = libc++;
CLANG_ENABLE_MODULES = YES;
CLANG_ENABLE_OBJC_ARC = YES;
CLANG_WARN_ASSIGN_ENUM = YES;
CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
CLANG_WARN_BOOL_CONVERSION = YES;
CLANG_WARN_COMMA = YES;
CLANG_WARN_COMPLETION_HANDLER_MISUSE = YES;
CLANG_WARN_CONSTANT_CONVERSION = YES;
CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
CLANG_WARN_DOCUMENTATION_COMMENTS = YES;
CLANG_WARN__DUPLICATE_METHOD_MATCH = YES; // This is Xcode's typo
CLANG_WARN_DUPLICATE_METHOD_MATCH = YES;
CLANG_WARN_EMPTY_BODY = YES;
CLANG_WARN_ENUM_CONVERSION = YES;
CLANG_WARN_FRAMEWORK_INCLUDE_PRIVATE_FROM_PUBLIC = YES;
CLANG_WARN_INFINITE_RECURSION = YES;
CLANG_WARN_INT_CONVERSION = YES;
CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = NO;
CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
CLANG_WARN_QUOTED_INCLUDE_IN_FRAMEWORK_HEADER = YES;
CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
CLANG_WARN_STRICT_PROTOTYPES = YES;
CLANG_WARN_SUSPICIOUS_MOVE = YES;
CLANG_WARN_UNREACHABLE_CODE = YES;
COMBINE_HIDPI_IMAGES = YES;
ENABLE_STRICT_OBJC_MSGSEND = YES;
GCC_C_LANGUAGE_STANDARD = gnu99;
GCC_NO_COMMON_BLOCKS = YES;
GCC_PRECOMPILE_PREFIX_HEADER = YES;
GCC_PREFIX_HEADER = $(REALM_PREFIX_HEADER);
GCC_TREAT_IMPLICIT_FUNCTION_DECLARATIONS_AS_ERRORS = YES;
GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
GCC_WARN_ABOUT_MISSING_NEWLINE = YES;
GCC_WARN_ABOUT_MISSING_PROTOTYPES = YES;
GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
GCC_WARN_SIGN_COMPARE = YES;
GCC_WARN_UNDECLARED_SELECTOR = YES;
GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
GCC_WARN_UNKNOWN_PRAGMAS = YES;
GCC_WARN_UNUSED_FUNCTION = YES;
GCC_WARN_UNUSED_PARAMETER = YES;
GCC_WARN_UNUSED_VARIABLE = YES;
SWIFT_COMPILATION_MODE = wholemodule;
SWIFT_OPTIMIZATION_LEVEL = -Owholemodule;
WARNING_CFLAGS = -Wmismatched-tags -Wunused-private-field -Wpartial-availability;
OTHER_CFLAGS = -fvisibility-inlines-hidden;
OTHER_CFLAGS[arch=armv7] = -fvisibility-inlines-hidden -fno-aligned-new;

HEADER_SEARCH_PATHS = $(inherited) core/include;

CODE_SIGN_IDENTITY[sdk=iphone*] = iPhone Developer;
CODE_SIGNING_REQUIRED[sdk=macosx] = NO;

IPHONEOS_DEPLOYMENT_TARGET_1300 = 9.0;
IPHONEOS_DEPLOYMENT_TARGET_1400 = 11.0;
IPHONEOS_DEPLOYMENT_TARGET = $(IPHONEOS_DEPLOYMENT_TARGET_$(XCODE_VERSION_MAJOR));
MACOSX_DEPLOYMENT_TARGET_1300 = 10.9;
MACOSX_DEPLOYMENT_TARGET_1400 = 10.13;
MACOSX_DEPLOYMENT_TARGET = $(MACOSX_DEPLOYMENT_TARGET_$(XCODE_VERSION_MAJOR));
WATCHOS_DEPLOYMENT_TARGET_1300 = 2.0;
WATCHOS_DEPLOYMENT_TARGET_1400 = 4.0;
WATCHOS_DEPLOYMENT_TARGET = $(WATCHOS_DEPLOYMENT_TARGET_$(XCODE_VERSION_MAJOR));
TVOS_DEPLOYMENT_TARGET_1300 = 9.0;
TVOS_DEPLOYMENT_TARGET_1400 = 11.0;
TVOS_DEPLOYMENT_TARGET = $(TVOS_DEPLOYMENT_TARGET_$(XCODE_VERSION_MAJOR));

// Disable building the arm64 simulators for some types of Carthage builds
REALM_ARM_ARCHS_YES = arm64 arm64e;
REALM_ARM_ARCHS = $(REALM_ARM_ARCHS_$(REALM_CARTHAGE_ARM_DISABLED))

EXCLUDED_ARCHS[sdk=watchsimulator*] = $(REALM_ARM_ARCHS);
EXCLUDED_ARCHS[sdk=iphonesimulator*] = $(REALM_ARM_ARCHS);
EXCLUDED_ARCHS[sdk=appletvsimulator*] = $(REALM_ARM_ARCHS);

SWIFT_VERSION = 5.5;
TARGETED_DEVICE_FAMILY = 1,2,3,4;
SDKROOT = $(REALM_SDKROOT);


REALM_ENABLE_BITCODE_1300 = YES;
REALM_ENABLE_BITCODE_1400 = NO;
ENABLE_BITCODE[sdk=iphone*] = $(REALM_ENABLE_BITCODE_$(XCODE_VERSION_MAJOR));
ENABLE_BITCODE[sdk=watch*] = $(REALM_ENABLE_BITCODE_$(XCODE_VERSION_MAJOR));
ENABLE_BITCODE[sdk=appletv*] = $(REALM_ENABLE_BITCODE_$(XCODE_VERSION_MAJOR));
